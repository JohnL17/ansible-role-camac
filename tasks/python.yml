---

- name: create directories for camac python service installation
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - "{{ camac_python_docroot }}"
    - "{{ camac_python_datadir }}"
    - "{{ camac_python_confdir }}"

- name: Review requirements.txt changes
  block:

    - command:
        argv:
          - diff
          - "{{ camac_python_docroot }}/requirements.txt"
          - "{{ camac_releasedir }}/camac/django/requirements.txt"
      register: requirements_diff
      failed_when: requirements_diff.rc >= 2

    - debug:
        msg: "{{ requirements_diff.stdout.split('\n') }}"
      when: requirements_diff.rc > 0

    - pause:
        prompt: "Requirements have changed. Please review them carefully! (Ctrl+c c => continue, Ctrl+c a => abort)"
      when: requirements_diff.rc > 0

- name: copy django directory to python service docroot
  synchronize:
    src: "{{ camac_releasedir }}/camac/django/"
    dest: "{{ camac_python_docroot }}"
    delete: yes
  delegate_to: "{{ inventory_hostname }}"

- name: install camac django app dependencies
  pip:
    requirements: "{{ camac_python_docroot }}/requirements.txt"
    extra_args: "--upgrade"
    virtualenv: "{{ camac_python_virtualenvdir }}"
    virtualenv_python: "python3"

- name: copy systemd units for api service
  template:
    src: camac-api.service.j2
    dest: /etc/systemd/system/camac-api.service

- name: render uwsgi ini
  template:
    src: uwsgi.ini.j2
    dest: "{{ camac_python_confdir }}/uwsgi.ini"

- name: render .env template
  template:
    src: env.j2
    dest: "{{ camac_python_docroot }}/.env"

- name: Run fake migrations
  block:

    - name: check if fake migrations should be applied
      shell: |
        psql \
            -h {{ camac_db_host }} \
            -p {{ camac_db_port }} \
            -U {{ camac_db_username }} \
            -d {{ camac_db_dbname }} \
            -t \
            -c "SELECT EXISTS (SELECT 1 FROM django_migrations WHERE name = '0017_instanceservice_activation_date')"
      register: old_schema_is_active
      failed_when: old_schema_is_active.stdout.lstrip() != "t"
      environment:
        PGPASSWORD: "{{ camac_db_password }}"

    - name: reset django_migrations table
      shell: |
        psql \
            -h {{ camac_db_host }} \
            -p {{ camac_db_port }} \
            -U {{ camac_db_username }} \
            -d {{ camac_db_dbname }} \
            -c "TRUNCATE django_migrations"
      environment:
        PGPASSWORD: "{{ camac_db_password }}"

    - name: run camac fake migrations
      django_manage:
        command: "migrate --fake {{ item.app }} {{ item.migration }}"
        app_path: "{{ camac_python_docroot }}"
        virtualenv: "{{ camac_python_virtualenvdir }}"
      loop: "{{ camac_db_fake_migrations }}"

  when: camac_db_run_fake_migrations and camac_db_fake_migrations is defined
  rescue:

    - fail:
        msg: "`camac_db_run_fake_migrations` is set to True but it appears that the fake migration have already run."

- name: run camac migrations
  django_manage:
    command: migrate
    app_path: "{{ camac_python_docroot }}"
    virtualenv: "{{ camac_python_virtualenvdir }}"

- name: load initial camac data
  django_manage:
    command: loadconfig
    app_path: "{{ camac_python_docroot }}"
    virtualenv: "{{ camac_python_virtualenvdir }}"
  when: camac_load_data
